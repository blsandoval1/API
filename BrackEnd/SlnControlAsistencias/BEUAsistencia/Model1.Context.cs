//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BEUAsistencia
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Asistencia> Asistencia { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Informe> Informe { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual ObjectResult<ReportePromedio1_Result> ReportePromedio1(Nullable<int> empleado)
        {
            var empleadoParameter = empleado.HasValue ?
                new ObjectParameter("Empleado", empleado) :
                new ObjectParameter("Empleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportePromedio1_Result>("ReportePromedio1", empleadoParameter);
        }
    
        public virtual ObjectResult<Reporte_Result> Reporte(Nullable<int> departamento)
        {
            var departamentoParameter = departamento.HasValue ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_Result>("Reporte", departamentoParameter);
        }
    
        public virtual ObjectResult<ReporteFechas_Result> ReporteFechas(Nullable<System.DateTime> fechaIng, Nullable<System.DateTime> fechaSal)
        {
            var fechaIngParameter = fechaIng.HasValue ?
                new ObjectParameter("FechaIng", fechaIng) :
                new ObjectParameter("FechaIng", typeof(System.DateTime));
    
            var fechaSalParameter = fechaSal.HasValue ?
                new ObjectParameter("FechaSal", fechaSal) :
                new ObjectParameter("FechaSal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteFechas_Result>("ReporteFechas", fechaIngParameter, fechaSalParameter);
        }
    }
}
